/***************************************************
 * Created by nanyuantingfeng on 2019/11/26 12:22. *
 ***************************************************/
import { IModelConstructor, isModel, Model, PureCollection, PureModel } from 'datx'
import { IRawModel } from 'datx-utils'

import { fetchModelRefs, removeModel, saveModel } from './helpers/model'
import { ISkeletonModel, IRequestOptions, ISkeletonModelConstructor } from '../interfaces'

export function decorateModel<T extends PureModel>(Base: IModelConstructor<T>) {
  const BaseClass = Base as typeof PureModel

  class SkeletonModel extends BaseClass implements ISkeletonModel {
    static useAutogeneratedIds: boolean = (BaseClass as any)['useAutogeneratedIds'] || false
    static endpoint: string | (() => string)

    constructor(rawData: IRawModel, collection?: PureCollection) {
      super(rawData, collection)
    }

    save(options?: IRequestOptions): Promise<this> {
      return saveModel(this, options)
    }

    remove(options?: IRequestOptions): Promise<void> {
      return removeModel(this, options)
    }

    fetchRefs() {
      return fetchModelRefs(this)
    }
  }

  return (SkeletonModel as unknown) as ISkeletonModelConstructor<T & ISkeletonModel>
}
