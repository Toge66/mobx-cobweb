/***************************************************
 * Created by nanyuantingfeng on 2020/6/2 12:36. *
 ***************************************************/
import { IModelConstructor, PureCollection, PureModel } from 'datx'
import { IRawModel } from 'datx-utils'
import type { INetActionsMixin } from '../interfaces/INetActionsMixin'
import { IRequestOptions } from '../interfaces'
import { fetchModelRefs, removeModel, saveModel } from '..'

export function withNetActions<T extends PureModel>(Base: IModelConstructor<T>) {
  const BaseClass = Base as typeof PureModel

  class WithNetActions extends BaseClass implements INetActionsMixin<T> {
    static useAutogeneratedIds: boolean = (BaseClass as any)['useAutogeneratedIds'] || false
    static endpoint: string | (() => string)

    constructor(rawData: IRawModel, collection?: PureCollection) {
      super(rawData, collection)
    }

    public save(options?: IRequestOptions): Promise<this> {
      return saveModel(this, options)
    }

    public remove(options?: IRequestOptions): Promise<void> {
      return removeModel(this, options)
    }

    public async fetchRefs() {
      await fetchModelRefs(this)
    }
  }

  return (WithNetActions as unknown) as IModelConstructor<INetActionsMixin<T> & T>
}
